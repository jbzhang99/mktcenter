<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bizvane.mktcenterservice.mappers.MktTaskRecordPOMapper">
  <resultMap id="BaseResultMap" type="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    <id column="mkt_task_record_id" jdbcType="BIGINT" property="mktTaskRecordId" />
    <result column="sys_company_id" jdbcType="BIGINT" property="sysCompanyId" />
    <result column="sys_brand_id" jdbcType="BIGINT" property="sysBrandId" />
    <result column="task_type" jdbcType="INTEGER" property="taskType" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="member_code" jdbcType="VARCHAR" property="memberCode" />
    <result column="consume_amount" jdbcType="DECIMAL" property="consumeAmount" />
    <result column="participate_date" jdbcType="TIMESTAMP" property="participateDate" />
    <result column="rewarded" jdbcType="INTEGER" property="rewarded" />
    <result column="coupon_num" jdbcType="INTEGER" property="couponNum" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="member_level" jdbcType="INTEGER" property="memberLevel" />
    <result column="share_num" jdbcType="INTEGER" property="shareNum" />
    <result column="is_store_limit" jdbcType="BIT" property="isStoreLimit" />
    <result column="store_limit_type" jdbcType="INTEGER" property="storeLimitType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modified_user_id" jdbcType="BIGINT" property="modifiedUserId" />
    <result column="modified_user_name" jdbcType="VARCHAR" property="modifiedUserName" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="valid" jdbcType="BIT" property="valid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    <result column="store_limit_list" jdbcType="LONGVARCHAR" property="storeLimitList" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    mkt_task_record_id, sys_company_id, sys_brand_id, task_type, task_id, member_code, 
    consume_amount, participate_date, rewarded, coupon_num, points, member_level, share_num, 
    is_store_limit, store_limit_type, remark, create_user_id, create_user_name, create_date, 
    modified_user_id, modified_user_name, modified_date, valid
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    store_limit_list
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_mkt_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPOExample" resultMap="BaseResultMap">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mkt_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_mkt_task_record
    where mkt_task_record_id = #{mktTaskRecordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    delete from t_mkt_task_record
    where mkt_task_record_id = #{mktTaskRecordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPOExample">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    delete from t_mkt_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    <selectKey keyProperty="mktTaskRecordId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_mkt_task_record (sys_company_id, sys_brand_id, task_type, 
      task_id, member_code, consume_amount, 
      participate_date, rewarded, coupon_num, 
      points, member_level, share_num, 
      is_store_limit, store_limit_type, remark, 
      create_user_id, create_user_name, create_date, 
      modified_user_id, modified_user_name, modified_date, 
      valid, store_limit_list)
    values (#{sysCompanyId,jdbcType=BIGINT}, #{sysBrandId,jdbcType=BIGINT}, #{taskType,jdbcType=INTEGER}, 
      #{taskId,jdbcType=BIGINT}, #{memberCode,jdbcType=VARCHAR}, #{consumeAmount,jdbcType=DECIMAL}, 
      #{participateDate,jdbcType=TIMESTAMP}, #{rewarded,jdbcType=INTEGER}, #{couponNum,jdbcType=INTEGER}, 
      #{points,jdbcType=INTEGER}, #{memberLevel,jdbcType=INTEGER}, #{shareNum,jdbcType=INTEGER}, 
      #{isStoreLimit,jdbcType=BIT}, #{storeLimitType,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=BIGINT}, #{createUserName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{modifiedUserId,jdbcType=BIGINT}, #{modifiedUserName,jdbcType=VARCHAR}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=BIT}, #{storeLimitList,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    <selectKey keyProperty="mktTaskRecordId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_mkt_task_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysCompanyId != null">
        sys_company_id,
      </if>
      <if test="sysBrandId != null">
        sys_brand_id,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="memberCode != null">
        member_code,
      </if>
      <if test="consumeAmount != null">
        consume_amount,
      </if>
      <if test="participateDate != null">
        participate_date,
      </if>
      <if test="rewarded != null">
        rewarded,
      </if>
      <if test="couponNum != null">
        coupon_num,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="memberLevel != null">
        member_level,
      </if>
      <if test="shareNum != null">
        share_num,
      </if>
      <if test="isStoreLimit != null">
        is_store_limit,
      </if>
      <if test="storeLimitType != null">
        store_limit_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifiedUserId != null">
        modified_user_id,
      </if>
      <if test="modifiedUserName != null">
        modified_user_name,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="storeLimitList != null">
        store_limit_list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysCompanyId != null">
        #{sysCompanyId,jdbcType=BIGINT},
      </if>
      <if test="sysBrandId != null">
        #{sysBrandId,jdbcType=BIGINT},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="memberCode != null">
        #{memberCode,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null">
        #{consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="participateDate != null">
        #{participateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rewarded != null">
        #{rewarded,jdbcType=INTEGER},
      </if>
      <if test="couponNum != null">
        #{couponNum,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
      <if test="memberLevel != null">
        #{memberLevel,jdbcType=INTEGER},
      </if>
      <if test="shareNum != null">
        #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="isStoreLimit != null">
        #{isStoreLimit,jdbcType=BIT},
      </if>
      <if test="storeLimitType != null">
        #{storeLimitType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUserId != null">
        #{modifiedUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedUserName != null">
        #{modifiedUserName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
      <if test="storeLimitList != null">
        #{storeLimitList,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPOExample" resultType="java.lang.Long">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    select count(*) from t_mkt_task_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    update t_mkt_task_record
    <set>
      <if test="record.mktTaskRecordId != null">
        mkt_task_record_id = #{record.mktTaskRecordId,jdbcType=BIGINT},
      </if>
      <if test="record.sysCompanyId != null">
        sys_company_id = #{record.sysCompanyId,jdbcType=BIGINT},
      </if>
      <if test="record.sysBrandId != null">
        sys_brand_id = #{record.sysBrandId,jdbcType=BIGINT},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.memberCode != null">
        member_code = #{record.memberCode,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeAmount != null">
        consume_amount = #{record.consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.participateDate != null">
        participate_date = #{record.participateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rewarded != null">
        rewarded = #{record.rewarded,jdbcType=INTEGER},
      </if>
      <if test="record.couponNum != null">
        coupon_num = #{record.couponNum,jdbcType=INTEGER},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.memberLevel != null">
        member_level = #{record.memberLevel,jdbcType=INTEGER},
      </if>
      <if test="record.shareNum != null">
        share_num = #{record.shareNum,jdbcType=INTEGER},
      </if>
      <if test="record.isStoreLimit != null">
        is_store_limit = #{record.isStoreLimit,jdbcType=BIT},
      </if>
      <if test="record.storeLimitType != null">
        store_limit_type = #{record.storeLimitType,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUserName != null">
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedUserId != null">
        modified_user_id = #{record.modifiedUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedUserName != null">
        modified_user_name = #{record.modifiedUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedDate != null">
        modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=BIT},
      </if>
      <if test="record.storeLimitList != null">
        store_limit_list = #{record.storeLimitList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    update t_mkt_task_record
    set mkt_task_record_id = #{record.mktTaskRecordId,jdbcType=BIGINT},
      sys_company_id = #{record.sysCompanyId,jdbcType=BIGINT},
      sys_brand_id = #{record.sysBrandId,jdbcType=BIGINT},
      task_type = #{record.taskType,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=BIGINT},
      member_code = #{record.memberCode,jdbcType=VARCHAR},
      consume_amount = #{record.consumeAmount,jdbcType=DECIMAL},
      participate_date = #{record.participateDate,jdbcType=TIMESTAMP},
      rewarded = #{record.rewarded,jdbcType=INTEGER},
      coupon_num = #{record.couponNum,jdbcType=INTEGER},
      points = #{record.points,jdbcType=INTEGER},
      member_level = #{record.memberLevel,jdbcType=INTEGER},
      share_num = #{record.shareNum,jdbcType=INTEGER},
      is_store_limit = #{record.isStoreLimit,jdbcType=BIT},
      store_limit_type = #{record.storeLimitType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modified_user_id = #{record.modifiedUserId,jdbcType=BIGINT},
      modified_user_name = #{record.modifiedUserName,jdbcType=VARCHAR},
      modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      valid = #{record.valid,jdbcType=BIT},
      store_limit_list = #{record.storeLimitList,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    update t_mkt_task_record
    set mkt_task_record_id = #{record.mktTaskRecordId,jdbcType=BIGINT},
      sys_company_id = #{record.sysCompanyId,jdbcType=BIGINT},
      sys_brand_id = #{record.sysBrandId,jdbcType=BIGINT},
      task_type = #{record.taskType,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=BIGINT},
      member_code = #{record.memberCode,jdbcType=VARCHAR},
      consume_amount = #{record.consumeAmount,jdbcType=DECIMAL},
      participate_date = #{record.participateDate,jdbcType=TIMESTAMP},
      rewarded = #{record.rewarded,jdbcType=INTEGER},
      coupon_num = #{record.couponNum,jdbcType=INTEGER},
      points = #{record.points,jdbcType=INTEGER},
      member_level = #{record.memberLevel,jdbcType=INTEGER},
      share_num = #{record.shareNum,jdbcType=INTEGER},
      is_store_limit = #{record.isStoreLimit,jdbcType=BIT},
      store_limit_type = #{record.storeLimitType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modified_user_id = #{record.modifiedUserId,jdbcType=BIGINT},
      modified_user_name = #{record.modifiedUserName,jdbcType=VARCHAR},
      modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      valid = #{record.valid,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    update t_mkt_task_record
    <set>
      <if test="sysCompanyId != null">
        sys_company_id = #{sysCompanyId,jdbcType=BIGINT},
      </if>
      <if test="sysBrandId != null">
        sys_brand_id = #{sysBrandId,jdbcType=BIGINT},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="memberCode != null">
        member_code = #{memberCode,jdbcType=VARCHAR},
      </if>
      <if test="consumeAmount != null">
        consume_amount = #{consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="participateDate != null">
        participate_date = #{participateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rewarded != null">
        rewarded = #{rewarded,jdbcType=INTEGER},
      </if>
      <if test="couponNum != null">
        coupon_num = #{couponNum,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="memberLevel != null">
        member_level = #{memberLevel,jdbcType=INTEGER},
      </if>
      <if test="shareNum != null">
        share_num = #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="isStoreLimit != null">
        is_store_limit = #{isStoreLimit,jdbcType=BIT},
      </if>
      <if test="storeLimitType != null">
        store_limit_type = #{storeLimitType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedUserId != null">
        modified_user_id = #{modifiedUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedUserName != null">
        modified_user_name = #{modifiedUserName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
      <if test="storeLimitList != null">
        store_limit_list = #{storeLimitList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mkt_task_record_id = #{mktTaskRecordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    update t_mkt_task_record
    set sys_company_id = #{sysCompanyId,jdbcType=BIGINT},
      sys_brand_id = #{sysBrandId,jdbcType=BIGINT},
      task_type = #{taskType,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=BIGINT},
      member_code = #{memberCode,jdbcType=VARCHAR},
      consume_amount = #{consumeAmount,jdbcType=DECIMAL},
      participate_date = #{participateDate,jdbcType=TIMESTAMP},
      rewarded = #{rewarded,jdbcType=INTEGER},
      coupon_num = #{couponNum,jdbcType=INTEGER},
      points = #{points,jdbcType=INTEGER},
      member_level = #{memberLevel,jdbcType=INTEGER},
      share_num = #{shareNum,jdbcType=INTEGER},
      is_store_limit = #{isStoreLimit,jdbcType=BIT},
      store_limit_type = #{storeLimitType,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modified_user_id = #{modifiedUserId,jdbcType=BIGINT},
      modified_user_name = #{modifiedUserName,jdbcType=VARCHAR},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=BIT},
      store_limit_list = #{storeLimitList,jdbcType=LONGVARCHAR}
    where mkt_task_record_id = #{mktTaskRecordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskRecordPO">
    <!--
      WARNING - 只读 - @mbg.generated
      This element was generated on 2018-09-12 11:00:25.
    -->
    update t_mkt_task_record
    set sys_company_id = #{sysCompanyId,jdbcType=BIGINT},
      sys_brand_id = #{sysBrandId,jdbcType=BIGINT},
      task_type = #{taskType,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=BIGINT},
      member_code = #{memberCode,jdbcType=VARCHAR},
      consume_amount = #{consumeAmount,jdbcType=DECIMAL},
      participate_date = #{participateDate,jdbcType=TIMESTAMP},
      rewarded = #{rewarded,jdbcType=INTEGER},
      coupon_num = #{couponNum,jdbcType=INTEGER},
      points = #{points,jdbcType=INTEGER},
      member_level = #{memberLevel,jdbcType=INTEGER},
      share_num = #{shareNum,jdbcType=INTEGER},
      is_store_limit = #{isStoreLimit,jdbcType=BIT},
      store_limit_type = #{storeLimitType,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modified_user_id = #{modifiedUserId,jdbcType=BIGINT},
      modified_user_name = #{modifiedUserName,jdbcType=VARCHAR},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=BIT}
    where mkt_task_record_id = #{mktTaskRecordId,jdbcType=BIGINT}
  </update>

  <select id="countPartMbr" parameterType="com.bizvane.mktcenterfacade.models.po.MktTaskSharePO" resultType="long">
    SELECT
        count( * )
    FROM
        ( SELECT COUNT( mkt_task_record_id ) c, member_code, task_id FROM `t_mkt_task_record` GROUP BY task_id, member_code HAVING

    task_id = #{mktTaskId} ) a
    <where>
      a.c =#{shareTimes}
    </where>




  </select>

  <select id="getTotalStatistics" resultType="com.bizvane.mktcenterfacade.models.bo.TotalStatisticsBO">
    SELECT
    SUM(consume_amount) AS totalConsume,
    IFNULL(COUNT(mkt_task_record_id),0) AS totalTimes
    FROM
    t_mkt_task_record
    WHERE
    valid = 1
    AND sys_brand_id =#{sysBrandId}
    AND task_type =#{taskType}
    AND member_code =#{memberCode}
    AND task_id=#{taskId}
  </select>

  <!--效果分析-->
   <select id="getAnalysisResult" resultType="com.bizvane.mktcenterfacade.models.vo.DayTaskRecordVo">
	SELECT
		tmt.mkt_task_id AS taskId,
		tmt.task_code AS taskCode,
		tmt.task_name AS taskName,
		tmtr.points_sum AS oneTaskPoints,
		tmtr.member_count AS oneTaskCountMbr,
		tmtr.share_num_sum AS oneTaskShareTimes,
		tmt.start_time,
		tmt.create_date,
		ROUND(
			TIMESTAMPDIFF(HOUR, tmt.start_time, now()) / 24,
			1
		) AS taskDates
	FROM
		t_mkt_task tmt
	JOIN t_mkt_task_count tmtr ON tmt.mkt_task_id = tmtr.mkt_task_id
     WHERE
     tmt.valid=1
     AND tmtr.valid = 1
     AND tmt.sys_brand_id = #{brandId}
     AND tmt.task_type = #{taskType}
     <if test="taskName!=null and taskName!=''">
       AND tmt.task_name like CONCAT('%',#{taskName},'%')
     </if>
     <if test="date2!=null and date2!=''">
       AND tmt.create_date <![CDATA[<=]]>#{date2}
     </if>
     <if test="date1!=null and date1!=''">
       AND tmt.create_date <![CDATA[>=]]> #{date1}
     </if>
     <if test="taskStatus!=null and taskStatus!='0'.toString()">
       AND tmt.task_status=#{taskStatus}
     </if>
   </select>
  <select id="getAnalysisTotalData" resultType="com.bizvane.mktcenterfacade.models.vo.DayTaskRecordVo">
	SELECT
		tmt.mkt_task_id AS taskId,
		tmtr.points_sum AS oneTaskPoints,
		tmtr.member_count AS oneTaskCountMbr
	FROM
		t_mkt_task tmt
	JOIN t_mkt_task_count tmtr ON tmt.mkt_task_id = tmtr.mkt_task_id
    WHERE
    tmt.valid=1
    AND tmtr.valid = 1
    AND tmt.sys_brand_id = #{brandId}
    AND tmt.task_type = #{taskType}
    <if test="taskName!=null and taskName!=''">
      AND tmt.task_name like CONCAT('%',#{taskName},'%')
    </if>
    <if test="date2!=null and date2!=''">
      AND tmt.create_date <![CDATA[<=]]>#{date2}
    </if>
    <if test="date1!=null and date1!=''">
      AND tmt.create_date <![CDATA[>=]]> #{date1}
    </if>
    <if test="taskStatus!=null and taskStatus!='0'.toString()">
      AND tmt.task_status=#{taskStatus}
    </if>
  </select>

  <select id="getAnalysisTotalCompletePeple" resultType="java.lang.Long">
    SELECT
    IFNULL(count(tmtr.member_code),0)AS allCountMbr
    FROM
    t_mkt_task  tmt  LEFT JOIN
    t_mkt_task_record tmtr ON tmt.mkt_task_id = tmtr.task_id AND tmtr.valid = 1 AND  tmtr.rewarded=1
    WHERE
    tmt.valid=1
    AND tmt.sys_brand_id = #{brandId}
    AND tmt.task_type = #{taskType}
    <if test="taskName!=null and taskName!=''">
      AND tmt.task_name like CONCAT('%',#{taskName},'%')
    </if>
    <if test="date2!=null and date2!=''">
      AND tmt.create_date <![CDATA[<=]]>#{date2}
    </if>
    <if test="date1!=null and date1!=''">
      AND tmt.create_date <![CDATA[>=]]> #{date1}
    </if>
    <if test="taskStatus!=null and taskStatus!='0'.toString()">
      AND tmt.task_status=#{taskStatus}
    </if>
  </select>
</mapper>